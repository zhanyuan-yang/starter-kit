{"ast":null,"code":"var _jsxFileName = \"/Users/zhanyuanyang/Desktop/react/starter-kit/src/router/routes/index.js\";\n// ** React Imports\nimport { Fragment, lazy } from \"react\";\nimport { Navigate } from \"react-router-dom\"; // ** Layouts\n\nimport BlankLayout from \"@layouts/BlankLayout\";\nimport VerticalLayout from \"@src/layouts/VerticalLayout\";\nimport HorizontalLayout from \"@src/layouts/HorizontalLayout\";\nimport LayoutWrapper from \"@src/@core/layouts/components/layout-wrapper\"; // ** Route Components\n\nimport PublicRoute from \"@components/routes/PublicRoute\"; // ** Utils\n\nimport { isObjEmpty } from \"@utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLayout = {\n  blank: /*#__PURE__*/_jsxDEV(BlankLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this),\n  vertical: /*#__PURE__*/_jsxDEV(VerticalLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this),\n  horizontal: /*#__PURE__*/_jsxDEV(HorizontalLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 15\n  }, this)\n}; // ** Document title\n\nconst TemplateTitle = \"%s - Vuexy React Admin Template\"; // ** Default Route\n\nconst DefaultRoute = \"/home\";\nconst Home = /*#__PURE__*/lazy(_c = () => import(\"../../views/Home\"));\n_c2 = Home;\nconst SecondPage = /*#__PURE__*/lazy(_c3 = () => import(\"../../views/SecondPage\"));\n_c4 = SecondPage;\nconst Login = /*#__PURE__*/lazy(_c5 = () => import(\"../../views/Login\"));\n_c6 = Login;\nconst ForgotPassword = /*#__PURE__*/lazy(_c7 = () => import(\"../../views/ForgotPassword\"));\n_c8 = ForgotPassword;\nconst Error = /*#__PURE__*/lazy(_c9 = () => import(\"../../views/Error\")); // ** Merge Routes\n\n_c10 = Error;\nconst Routes = [{\n  path: \"/\",\n  index: true,\n  element: /*#__PURE__*/_jsxDEV(Navigate, {\n    replace: true,\n    to: DefaultRoute\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 14\n  }, this)\n}, {\n  path: \"/home\",\n  element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 14\n  }, this)\n}, {\n  path: \"/second-page\",\n  element: /*#__PURE__*/_jsxDEV(SecondPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 14\n  }, this)\n}, {\n  path: \"/login\",\n  element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 14\n  }, this),\n  meta: {\n    layout: \"blank\"\n  }\n}, {\n  path: \"/forgot-password\",\n  element: /*#__PURE__*/_jsxDEV(ForgotPassword, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 14\n  }, this),\n  meta: {\n    layout: \"blank\"\n  }\n}, {\n  path: \"/error\",\n  element: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 14\n  }, this),\n  meta: {\n    layout: \"blank\"\n  }\n}];\n\nconst getRouteMeta = route => {\n  if (isObjEmpty(route.element.props)) {\n    if (route.meta) {\n      return {\n        routeMeta: route.meta\n      };\n    } else {\n      return {};\n    }\n  }\n}; // ** Return Filtered Array of Routes & Paths\n\n\nconst MergeLayoutRoutes = (layout, defaultLayout) => {\n  const LayoutRoutes = [];\n\n  if (Routes) {\n    Routes.filter(route => {\n      let isBlank = false; // ** Checks if Route layout or Default layout matches current layout\n\n      if (route.meta && route.meta.layout && route.meta.layout === layout || (route.meta === undefined || route.meta.layout === undefined) && defaultLayout === layout) {\n        const RouteTag = PublicRoute; // ** Check for public or private route\n\n        if (route.meta) {\n          route.meta.layout === \"blank\" ? isBlank = true : isBlank = false;\n        }\n\n        if (route.element) {\n          const Wrapper = // eslint-disable-next-line multiline-ternary\n          isObjEmpty(route.element.props) && isBlank === false ? // eslint-disable-next-line multiline-ternary\n          LayoutWrapper : Fragment;\n          route.element = /*#__PURE__*/_jsxDEV(Wrapper, { ...(isBlank === false ? getRouteMeta(route) : {}),\n            children: /*#__PURE__*/_jsxDEV(RouteTag, {\n              route: route,\n              children: route.element\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this);\n        } // Push route to LayoutRoutes\n\n\n        LayoutRoutes.push(route);\n      }\n\n      return LayoutRoutes;\n    });\n  }\n\n  return LayoutRoutes;\n};\n\n_c11 = MergeLayoutRoutes;\n\nconst getRoutes = layout => {\n  const defaultLayout = layout || \"vertical\";\n  const layouts = [\"vertical\", \"horizontal\", \"blank\"];\n  const AllRoutes = [];\n  layouts.forEach(layoutItem => {\n    const LayoutRoutes = MergeLayoutRoutes(layoutItem, defaultLayout);\n    AllRoutes.push({\n      path: \"/\",\n      element: getLayout[layoutItem] || getLayout[defaultLayout],\n      children: LayoutRoutes\n    });\n  });\n  return AllRoutes;\n};\n\nexport { DefaultRoute, TemplateTitle, Routes, getRoutes };\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"Home$lazy\");\n$RefreshReg$(_c2, \"Home\");\n$RefreshReg$(_c3, \"SecondPage$lazy\");\n$RefreshReg$(_c4, \"SecondPage\");\n$RefreshReg$(_c5, \"Login$lazy\");\n$RefreshReg$(_c6, \"Login\");\n$RefreshReg$(_c7, \"ForgotPassword$lazy\");\n$RefreshReg$(_c8, \"ForgotPassword\");\n$RefreshReg$(_c9, \"Error$lazy\");\n$RefreshReg$(_c10, \"Error\");\n$RefreshReg$(_c11, \"MergeLayoutRoutes\");","map":{"version":3,"names":["Fragment","lazy","Navigate","BlankLayout","VerticalLayout","HorizontalLayout","LayoutWrapper","PublicRoute","isObjEmpty","getLayout","blank","vertical","horizontal","TemplateTitle","DefaultRoute","Home","SecondPage","Login","ForgotPassword","Error","Routes","path","index","element","meta","layout","getRouteMeta","route","props","routeMeta","MergeLayoutRoutes","defaultLayout","LayoutRoutes","filter","isBlank","undefined","RouteTag","Wrapper","push","getRoutes","layouts","AllRoutes","forEach","layoutItem","children"],"sources":["/Users/zhanyuanyang/Desktop/react/starter-kit/src/router/routes/index.js"],"sourcesContent":["// ** React Imports\nimport { Fragment, lazy } from \"react\"\nimport { Navigate } from \"react-router-dom\"\n// ** Layouts\nimport BlankLayout from \"@layouts/BlankLayout\"\nimport VerticalLayout from \"@src/layouts/VerticalLayout\"\nimport HorizontalLayout from \"@src/layouts/HorizontalLayout\"\nimport LayoutWrapper from \"@src/@core/layouts/components/layout-wrapper\"\n\n// ** Route Components\nimport PublicRoute from \"@components/routes/PublicRoute\"\n\n// ** Utils\nimport { isObjEmpty } from \"@utils\"\n\nconst getLayout = {\n  blank: <BlankLayout />,\n  vertical: <VerticalLayout />,\n  horizontal: <HorizontalLayout />\n}\n\n// ** Document title\nconst TemplateTitle = \"%s - Vuexy React Admin Template\"\n\n// ** Default Route\nconst DefaultRoute = \"/home\"\n\nconst Home = lazy(() => import(\"../../views/Home\"))\nconst SecondPage = lazy(() => import(\"../../views/SecondPage\"))\nconst Login = lazy(() => import(\"../../views/Login\"))\nconst ForgotPassword = lazy(() => import(\"../../views/ForgotPassword\"))\nconst Error = lazy(() => import(\"../../views/Error\"))\n\n// ** Merge Routes\nconst Routes = [\n  {\n    path: \"/\",\n    index: true,\n    element: <Navigate replace to={DefaultRoute} />\n  },\n  {\n    path: \"/home\",\n    element: <Home />\n  },\n  {\n    path: \"/second-page\",\n    element: <SecondPage />\n  },\n  {\n    path: \"/login\",\n    element: <Login />,\n    meta: {\n      layout: \"blank\"\n    }\n  },\n  {\n    path: \"/forgot-password\",\n    element: <ForgotPassword />,\n    meta: {\n      layout: \"blank\"\n    }\n  },\n  {\n    path: \"/error\",\n    element: <Error />,\n    meta: {\n      layout: \"blank\"\n    }\n  }\n]\n\nconst getRouteMeta = (route) => {\n  if (isObjEmpty(route.element.props)) {\n    if (route.meta) {\n      return { routeMeta: route.meta }\n    } else {\n      return {}\n    }\n  }\n}\n\n// ** Return Filtered Array of Routes & Paths\nconst MergeLayoutRoutes = (layout, defaultLayout) => {\n  const LayoutRoutes = []\n\n  if (Routes) {\n    Routes.filter((route) => {\n      let isBlank = false\n      // ** Checks if Route layout or Default layout matches current layout\n      if (\n        (route.meta && route.meta.layout && route.meta.layout === layout) ||\n        ((route.meta === undefined || route.meta.layout === undefined) &&\n          defaultLayout === layout)\n      ) {\n        const RouteTag = PublicRoute\n\n        // ** Check for public or private route\n        if (route.meta) {\n          route.meta.layout === \"blank\" ? (isBlank = true) : (isBlank = false)\n        }\n        if (route.element) {\n          const Wrapper =\n            // eslint-disable-next-line multiline-ternary\n            isObjEmpty(route.element.props) && isBlank === false\n              ? // eslint-disable-next-line multiline-ternary\n                LayoutWrapper\n              : Fragment\n\n          route.element = (\n            <Wrapper {...(isBlank === false ? getRouteMeta(route) : {})}>\n              <RouteTag route={route}>{route.element}</RouteTag>\n            </Wrapper>\n          )\n        }\n\n        // Push route to LayoutRoutes\n        LayoutRoutes.push(route)\n      }\n      return LayoutRoutes\n    })\n  }\n  return LayoutRoutes\n}\n\nconst getRoutes = (layout) => {\n  const defaultLayout = layout || \"vertical\"\n  const layouts = [\"vertical\", \"horizontal\", \"blank\"]\n\n  const AllRoutes = []\n\n  layouts.forEach((layoutItem) => {\n    const LayoutRoutes = MergeLayoutRoutes(layoutItem, defaultLayout)\n\n    AllRoutes.push({\n      path: \"/\",\n      element: getLayout[layoutItem] || getLayout[defaultLayout],\n      children: LayoutRoutes\n    })\n  })\n  return AllRoutes\n}\n\nexport { DefaultRoute, TemplateTitle, Routes, getRoutes }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}