{"ast":null,"code":"var _s = $RefreshSig$();\n\n// ** Store Imports\nimport { handleNavbarType } from \"@store/layout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport const useNavbarType = () => {\n  _s();\n\n  // ** Hooks\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.layout);\n\n  const setNavbarType = type => {\n    dispatch(handleNavbarType(type));\n  };\n\n  return {\n    navbarType: store.navbarType,\n    setNavbarType\n  };\n};\n\n_s(useNavbarType, \"zw25nIk3XDUGgPuAbVy/YKvKJS8=\", false, function () {\n  return [useDispatch, useSelector];\n});","map":{"version":3,"names":["handleNavbarType","useDispatch","useSelector","useNavbarType","dispatch","store","state","layout","setNavbarType","type","navbarType"],"sources":["/Users/zhanyuanyang/Desktop/react/starter-kit/src/utility/hooks/useNavbarType.js"],"sourcesContent":["// ** Store Imports\nimport { handleNavbarType } from \"@store/layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nexport const useNavbarType = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector((state) => state.layout)\n\n  const setNavbarType = (type) => {\n    dispatch(handleNavbarType(type))\n  }\n\n  return { navbarType: store.navbarType, setNavbarType }\n}\n"],"mappings":";;AAAA;AACA,SAASA,gBAAT,QAAiC,eAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;;EACjC;EACA,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAMI,KAAK,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,MAAlB,CAAzB;;EAEA,MAAMC,aAAa,GAAIC,IAAD,IAAU;IAC9BL,QAAQ,CAACJ,gBAAgB,CAACS,IAAD,CAAjB,CAAR;EACD,CAFD;;EAIA,OAAO;IAAEC,UAAU,EAAEL,KAAK,CAACK,UAApB;IAAgCF;EAAhC,CAAP;AACD,CAVM;;GAAML,a;UAEMF,W,EACHC,W"},"metadata":{},"sourceType":"module"}