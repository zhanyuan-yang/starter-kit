{"ast":null,"code":"// ** Redux Imports\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"; // ** Axios Imports\n\nimport axios from \"axios\";\nexport const getBookmarks = createAsyncThunk(\"layout/getBookmarks\", async () => {\n  const response = await axios.get(\"/api/bookmarks/data\");\n  return {\n    data: response.data.suggestions,\n    bookmarks: response.data.bookmarks\n  };\n});\nexport const updateBookmarked = createAsyncThunk(\"layout/updateBookmarked\", async id => {\n  await axios.post(\"/api/bookmarks/update\", {\n    id\n  });\n  return id;\n});\nexport const layoutSlice = createSlice({\n  name: \"layout\",\n  initialState: {\n    query: \"\",\n    bookmarks: [],\n    suggestions: []\n  },\n  reducers: {\n    handleSearchQuery: (state, action) => {\n      state.query = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getBookmarks.fulfilled, (state, action) => {\n      state.suggestions = action.payload.data;\n      state.bookmarks = action.payload.bookmarks;\n    }).addCase(updateBookmarked.fulfilled, (state, action) => {\n      let objectToUpdate; // ** find & update object\n\n      state.suggestions.find(item => {\n        if (item.id === action.payload) {\n          item.isBookmarked = !item.isBookmarked;\n          objectToUpdate = item;\n        }\n      }); // ** Get index to add or remove bookmark from array\n\n      const bookmarkIndex = state.bookmarks.findIndex(x => x.id === action.payload);\n\n      if (bookmarkIndex === -1) {\n        state.bookmarks.push(objectToUpdate);\n      } else {\n        state.bookmarks.splice(bookmarkIndex, 1);\n      }\n    });\n  }\n});\nexport const {\n  handleSearchQuery\n} = layoutSlice.actions;\nexport default layoutSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","getBookmarks","response","get","data","suggestions","bookmarks","updateBookmarked","id","post","layoutSlice","name","initialState","query","reducers","handleSearchQuery","state","action","payload","extraReducers","builder","addCase","fulfilled","objectToUpdate","find","item","isBookmarked","bookmarkIndex","findIndex","x","push","splice","actions","reducer"],"sources":["/Users/zhanyuanyang/Desktop/react/starter-kit/src/redux/navbar.js"],"sourcesContent":["// ** Redux Imports\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\n\n// ** Axios Imports\nimport axios from \"axios\"\n\nexport const getBookmarks = createAsyncThunk(\n  \"layout/getBookmarks\",\n  async () => {\n    const response = await axios.get(\"/api/bookmarks/data\")\n    return {\n      data: response.data.suggestions,\n      bookmarks: response.data.bookmarks\n    }\n  }\n)\n\nexport const updateBookmarked = createAsyncThunk(\n  \"layout/updateBookmarked\",\n  async (id) => {\n    await axios.post(\"/api/bookmarks/update\", { id })\n    return id\n  }\n)\n\nexport const layoutSlice = createSlice({\n  name: \"layout\",\n  initialState: {\n    query: \"\",\n    bookmarks: [],\n    suggestions: []\n  },\n  reducers: {\n    handleSearchQuery: (state, action) => {\n      state.query = action.payload\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getBookmarks.fulfilled, (state, action) => {\n        state.suggestions = action.payload.data\n        state.bookmarks = action.payload.bookmarks\n      })\n      .addCase(updateBookmarked.fulfilled, (state, action) => {\n        let objectToUpdate\n\n        // ** find & update object\n        state.suggestions.find((item) => {\n          if (item.id === action.payload) {\n            item.isBookmarked = !item.isBookmarked\n            objectToUpdate = item\n          }\n        })\n\n        // ** Get index to add or remove bookmark from array\n        const bookmarkIndex = state.bookmarks.findIndex(\n          (x) => x.id === action.payload\n        )\n\n        if (bookmarkIndex === -1) {\n          state.bookmarks.push(objectToUpdate)\n        } else {\n          state.bookmarks.splice(bookmarkIndex, 1)\n        }\n      })\n  }\n})\n\nexport const { handleSearchQuery } = layoutSlice.actions\n\nexport default layoutSlice.reducer\n"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CAC1C,qBAD0C,EAE1C,YAAY;EACV,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,qBAAV,CAAvB;EACA,OAAO;IACLC,IAAI,EAAEF,QAAQ,CAACE,IAAT,CAAcC,WADf;IAELC,SAAS,EAAEJ,QAAQ,CAACE,IAAT,CAAcE;EAFpB,CAAP;AAID,CARyC,CAArC;AAWP,OAAO,MAAMC,gBAAgB,GAAGR,gBAAgB,CAC9C,yBAD8C,EAE9C,MAAOS,EAAP,IAAc;EACZ,MAAMR,KAAK,CAACS,IAAN,CAAW,uBAAX,EAAoC;IAAED;EAAF,CAApC,CAAN;EACA,OAAOA,EAAP;AACD,CAL6C,CAAzC;AAQP,OAAO,MAAME,WAAW,GAAGZ,WAAW,CAAC;EACrCa,IAAI,EAAE,QAD+B;EAErCC,YAAY,EAAE;IACZC,KAAK,EAAE,EADK;IAEZP,SAAS,EAAE,EAFC;IAGZD,WAAW,EAAE;EAHD,CAFuB;EAOrCS,QAAQ,EAAE;IACRC,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACpCD,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC,OAArB;IACD;EAHO,CAP2B;EAYrCC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CACJC,OADH,CACWpB,YAAY,CAACqB,SADxB,EACmC,CAACN,KAAD,EAAQC,MAAR,KAAmB;MAClDD,KAAK,CAACX,WAAN,GAAoBY,MAAM,CAACC,OAAP,CAAed,IAAnC;MACAY,KAAK,CAACV,SAAN,GAAkBW,MAAM,CAACC,OAAP,CAAeZ,SAAjC;IACD,CAJH,EAKGe,OALH,CAKWd,gBAAgB,CAACe,SAL5B,EAKuC,CAACN,KAAD,EAAQC,MAAR,KAAmB;MACtD,IAAIM,cAAJ,CADsD,CAGtD;;MACAP,KAAK,CAACX,WAAN,CAAkBmB,IAAlB,CAAwBC,IAAD,IAAU;QAC/B,IAAIA,IAAI,CAACjB,EAAL,KAAYS,MAAM,CAACC,OAAvB,EAAgC;UAC9BO,IAAI,CAACC,YAAL,GAAoB,CAACD,IAAI,CAACC,YAA1B;UACAH,cAAc,GAAGE,IAAjB;QACD;MACF,CALD,EAJsD,CAWtD;;MACA,MAAME,aAAa,GAAGX,KAAK,CAACV,SAAN,CAAgBsB,SAAhB,CACnBC,CAAD,IAAOA,CAAC,CAACrB,EAAF,KAASS,MAAM,CAACC,OADH,CAAtB;;MAIA,IAAIS,aAAa,KAAK,CAAC,CAAvB,EAA0B;QACxBX,KAAK,CAACV,SAAN,CAAgBwB,IAAhB,CAAqBP,cAArB;MACD,CAFD,MAEO;QACLP,KAAK,CAACV,SAAN,CAAgByB,MAAhB,CAAuBJ,aAAvB,EAAsC,CAAtC;MACD;IACF,CA1BH;EA2BD;AAxCoC,CAAD,CAA/B;AA2CP,OAAO,MAAM;EAAEZ;AAAF,IAAwBL,WAAW,CAACsB,OAA1C;AAEP,eAAetB,WAAW,CAACuB,OAA3B"},"metadata":{},"sourceType":"module"}