{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/* eslint-disable implicit-arrow-linebreak */\n// ** React Imports\nimport { useContext } from \"react\";\nimport { AbilityContext } from \"@src/utility/context/Can\";\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\n\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return \"VerticalNavMenuSectionHeader\";\n  if (item.children) return \"VerticalNavMenuGroup\";\n  return \"VerticalNavMenuLink\";\n};\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\n\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item.children) return \"HorizontalNavMenuGroup\";\n  return \"HorizontalNavMenuLink\";\n};\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\n\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return currentURL === link || routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link; // return currentURL === link\n};\n/**\n * Check if the given item has the given url\n * in one of its children\n *\n * @param item\n * @param activeItem\n */\n\nexport const hasActiveChild = (item, currentUrl) => {\n  const {\n    children\n  } = item;\n\n  if (!children) {\n    return false;\n  }\n\n  for (const child of children) {\n    if (child.children) {\n      if (hasActiveChild(child, currentUrl)) {\n        return true;\n      }\n    } // Check if the child has a link and is active\n\n\n    if (child && child.navLink && currentUrl && (child.navLink === currentUrl || currentUrl.includes(child.navLink))) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Check if this is a children\n * of the given item\n *\n * @param children\n * @param openGroup\n * @param currentActiveGroup\n */\n\nexport const removeChildren = (children, openGroup, currentActiveGroup) => {\n  children.forEach(child => {\n    if (!currentActiveGroup.includes(child.id)) {\n      const index = openGroup.indexOf(child.id);\n      if (index > -1) openGroup.splice(index, 1);\n      if (child.children) removeChildren(child.children, openGroup, currentActiveGroup);\n    }\n  });\n};\n\nconst checkForVisibleChild = (arr, ability) => {\n  return arr.some(i => {\n    if (i.children) {\n      return checkForVisibleChild(i.children, ability);\n    } else {\n      return ability.can(i.action, i.resource);\n    }\n  });\n};\n\nexport const canViewMenuGroup = item => {\n  _s();\n\n  const ability = useContext(AbilityContext); // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n\n  const hasAnyVisibleChild = item.children && checkForVisibleChild(item.children, ability); // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild;\n  }\n\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild;\n};\n\n_s(canViewMenuGroup, \"Mgx70MHFOjWkgzuKcjn1pYPEx8o=\");\n\nexport const canViewMenuItem = item => {\n  _s2();\n\n  const ability = useContext(AbilityContext);\n  return ability.can(item.action, item.resource);\n};\n\n_s2(canViewMenuItem, \"Mgx70MHFOjWkgzuKcjn1pYPEx8o=\");","map":{"version":3,"names":["useContext","AbilityContext","resolveVerticalNavMenuItemComponent","item","header","children","resolveHorizontalNavMenuItemComponent","isNavLinkActive","link","currentURL","routerProps","meta","navLink","hasActiveChild","currentUrl","child","includes","removeChildren","openGroup","currentActiveGroup","forEach","id","index","indexOf","splice","checkForVisibleChild","arr","ability","some","i","can","action","resource","canViewMenuGroup","hasAnyVisibleChild","canViewMenuItem"],"sources":["/Users/zhanyuanyang/Desktop/react/starter-kit/src/@core/layouts/utils.js"],"sourcesContent":["/* eslint-disable implicit-arrow-linebreak */\n// ** React Imports\nimport { useContext } from \"react\"\nimport { AbilityContext } from \"@src/utility/context/Can\"\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = (item) => {\n  if (item.header) return \"VerticalNavMenuSectionHeader\"\n  if (item.children) return \"VerticalNavMenuGroup\"\n  return \"VerticalNavMenuLink\"\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = (item) => {\n  if (item.children) return \"HorizontalNavMenuGroup\"\n  return \"HorizontalNavMenuLink\"\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n    currentURL === link ||\n    (routerProps &&\n      routerProps.meta &&\n      routerProps.meta.navLink &&\n      routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if the given item has the given url\n * in one of its children\n *\n * @param item\n * @param activeItem\n */\nexport const hasActiveChild = (item, currentUrl) => {\n  const { children } = item\n\n  if (!children) {\n    return false\n  }\n\n  for (const child of children) {\n    if (child.children) {\n      if (hasActiveChild(child, currentUrl)) {\n        return true\n      }\n    }\n\n    // Check if the child has a link and is active\n    if (\n      child &&\n      child.navLink &&\n      currentUrl &&\n      (child.navLink === currentUrl || currentUrl.includes(child.navLink))\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Check if this is a children\n * of the given item\n *\n * @param children\n * @param openGroup\n * @param currentActiveGroup\n */\nexport const removeChildren = (children, openGroup, currentActiveGroup) => {\n  children.forEach((child) => {\n    if (!currentActiveGroup.includes(child.id)) {\n      const index = openGroup.indexOf(child.id)\n      if (index > -1) openGroup.splice(index, 1)\n      if (child.children) removeChildren(child.children, openGroup, currentActiveGroup)\n    }\n  })\n}\n\nconst checkForVisibleChild = (arr, ability) => {\n  return arr.some((i) => {\n    if (i.children) {\n      return checkForVisibleChild(i.children, ability)\n    } else {\n      return ability.can(i.action, i.resource)\n    }\n  })\n}\n\nexport const canViewMenuGroup = (item) => {\n  const ability = useContext(AbilityContext)\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  const hasAnyVisibleChild =\n    item.children && checkForVisibleChild(item.children, ability)\n\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild\n  }\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\n}\n\nexport const canViewMenuItem = (item) => {\n  const ability = useContext(AbilityContext)\n  return ability.can(item.action, item.resource)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}